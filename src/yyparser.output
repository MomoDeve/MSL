Terminals unused in grammar

    ERROR
    ENDLINE
    APOS
    LAMBDA


Grammar

    0 $accept: NAMESPACE_LIST $end

    1 NAMESPACE_LIST: %empty
    2               | NAMESPACE_LIST NAMESPACE_DECL

    3 NAMESPACE_DECL: NAMESPACE OBJECT BRACE_BRACKET_O NAMESPACE_MEMBER_LIST BRACE_BRACKET_C

    4 NAMESPACE_MEMBER_LIST: %empty
    5                      | NAMESPACE_MEMBER_LIST CLASS_DECL
    6                      | NAMESPACE_MEMBER_LIST USING_STATEMENT

    7 USING_STATEMENT: USING NAMESPACE OBJECT SEMICOLON

    8 CLASS_DECL: CLASS_MODIFIER_LIST CLASS OBJECT BRACE_BRACKET_O MEMBER_LIST BRACE_BRACKET_C

    9 CLASS_MODIFIER_LIST: %empty
   10                    | MEMBER_MODIFIER_LIST PUBLIC
   11                    | MEMBER_MODIFIER_LIST PRIVATE
   12                    | MEMBER_MODIFIER_LIST STATIC

   13 MEMBER_LIST: %empty
   14            | MEMBER_LIST MEMBER_MODIFIER_LIST METHOD_DECL
   15            | MEMBER_LIST MEMBER_MODIFIER_LIST ATTRIBUTE_DECL

   16 ATTRIBUTE_DECL: VARIABLE OBJECT SEMICOLON

   17 MEMBER_MODIFIER_LIST: %empty
   18                     | MEMBER_MODIFIER_LIST PUBLIC
   19                     | MEMBER_MODIFIER_LIST PRIVATE
   20                     | MEMBER_MODIFIER_LIST STATIC
   21                     | MEMBER_MODIFIER_LIST CONST

   22 METHOD_DECL: FUNCTION OBJECT ARGUMENT_LIST_DECL SEMICOLON
   23            | FUNCTION OBJECT ARGUMENT_LIST_DECL EXPRESSION_BLOCK

   24 ARGUMENT_LIST_DECL: ROUND_BRACKET_O VARIABLE_NAME_LIST ROUND_BRACKET_C

   25 VARIABLE_NAME_LIST: %empty
   26                   | OBJECT
   27                   | VARIABLE_NAME_LIST COMMA OBJECT

   28 EXPRESSION_BLOCK: BRACE_BRACKET_O EXPRESSION_LIST BRACE_BRACKET_C

   29 EXPRESSION_LIST: %empty
   30                | EXPRESSION_LIST EXPRESSION

   31 EXPRESSION: IF_STATEMENT
   32           | FOR_STATEMENT
   33           | WHILE_STATEMENT
   34           | FOREACH_STATEMENT
   35           | TRY_STATEMENT
   36           | RETURN_STATEMENT SEMICOLON
   37           | VARIABLE_DECL SEMICOLON
   38           | CONST_VARIABLE_DECL SEMICOLON
   39           | STATEMENT SEMICOLON

   40 STATEMENT: VALUE
   41          | ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C
   42          | BINARY_STATEMENT
   43          | UNARY_STATEMENT

   44 VALUE: METHOD_CALL
   45      | VALUE DOT METHOD_CALL
   46      | INTEGER_CONSTANT
   47      | STRING_CONSTANT
   48      | FLOAT_CONSTANT
   49      | NULLPTR
   50      | THIS
   51      | OBJECT
   52      | TRUE_CONSTANT
   53      | FALSE_CONSTANT
   54      | VALUE DOT OBJECT
   55      | INDEX_CALL

   56 INDEX_CALL: VALUE SQUARE_BRACKET_O STATEMENT SQUARE_BRACKET_C

   57 METHOD_CALL: OBJECT ROUND_BRACKET_O ROUND_BRACKET_C
   58            | OBJECT ROUND_BRACKET_O METHOD_ARGUMENT_LIST ROUND_BRACKET_C

   59 METHOD_ARGUMENT_LIST: STATEMENT
   60                     | METHOD_ARGUMENT_LIST COMMA STATEMENT

   61 BINARY_STATEMENT: STATEMENT SUM_OP STATEMENT
   62                 | STATEMENT SUB_OP STATEMENT
   63                 | STATEMENT MULT_OP STATEMENT
   64                 | STATEMENT DIV_OP STATEMENT
   65                 | STATEMENT MOD_OP STATEMENT
   66                 | STATEMENT POWER_OP STATEMENT
   67                 | STATEMENT LOGIC_EQUALS STATEMENT
   68                 | STATEMENT LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT LOGIC_LESS STATEMENT
   70                 | STATEMENT LOGIC_GREATER STATEMENT
   71                 | STATEMENT LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT LOGIC_OR STATEMENT
   74                 | STATEMENT LOGIC_AND STATEMENT
   75                 | STATEMENT ASSIGN_OP STATEMENT
   76                 | STATEMENT SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT POWER_ASSIGN_OP STATEMENT

   82 UNARY_STATEMENT: NEGATION_OP STATEMENT
   83                | SUM_OP STATEMENT
   84                | SUB_OP STATEMENT

   85 RETURN_STATEMENT: RETURN
   86                 | RETURN STATEMENT

   87 VARIABLE_DECL: VARIABLE OBJECT
   88              | VARIABLE OBJECT ASSIGN_OP STATEMENT

   89 CONST_VARIABLE_DECL: CONST VARIABLE OBJECT
   90                    | CONST VARIABLE OBJECT ASSIGN_OP STATEMENT

   91 FOR_STATEMENT: FOR ROUND_BRACKET_O OPTIONAL_FOR_INIT SEMICOLON OPTIONAL_FOR_PRED SEMICOLON OPTIONAL_FOR_ITER ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

   92 OPTIONAL_FOR_INIT: %empty
   93                  | VARIABLE_DECL
   94                  | STATEMENT

   95 OPTIONAL_FOR_PRED: %empty
   96                  | STATEMENT

   97 OPTIONAL_FOR_ITER: %empty
   98                  | STATEMENT

   99 IF_STATEMENT: IF_BLOCK
  100             | IF_BLOCK ELIF_LIST
  101             | IF_BLOCK ELIF_LIST ELSE_BLOCK
  102             | IF_BLOCK ELSE_BLOCK

  103 IF_BLOCK: IF ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

  104 ELIF_LIST: ELIF_BLOCK
  105          | ELIF_LIST ELIF_BLOCK

  106 ELIF_BLOCK: ELIF ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

  107 ELSE_BLOCK: ELSE INNER_EXPRESSION_BLOCK

  108 INNER_EXPRESSION_BLOCK: EXPRESSION
  109                       | EXPRESSION_BLOCK

  110 WHILE_STATEMENT: WHILE ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

  111 FOREACH_STATEMENT: FOREACH ROUND_BRACKET_O VARIABLE OBJECT IN STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

  112 TRY_STATEMENT: TRY EXPRESSION_BLOCK
  113              | TRY EXPRESSION_BLOCK CATCH EXPRESSION_BLOCK
  114              | TRY EXPRESSION_BLOCK CATCH ROUND_BRACKET_O OBJECT ROUND_BRACKET_C EXPRESSION_BLOCK


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ERROR (258)
    ENDLINE (259)
    APOS (260)
    COMMA (261) 27 60
    SEMICOLON (262) 7 16 22 36 37 38 39 91
    FOR (263) 91
    IF (264) 103
    ELSE (265) 107
    ELIF (266) 106
    WHILE (267) 110
    VARIABLE (268) 16 87 88 89 90 111
    FUNCTION (269) 22 23
    NAMESPACE (270) 3 7
    LAMBDA (271)
    FOREACH (272) 111
    IN (273) 111
    USING (274) 7
    TRY (275) 112 113 114
    CATCH (276) 113 114
    OBJECT <token> (277) 3 7 8 16 22 23 26 27 51 54 57 58 87 88 89 90 111 114
    THIS <token> (278) 50
    INTEGER_CONSTANT <token> (279) 46
    FLOAT_CONSTANT <token> (280) 48
    STRING_CONSTANT <token> (281) 47
    TRUE_CONSTANT <token> (282) 52
    FALSE_CONSTANT <token> (283) 53
    NULLPTR <token> (284) 49
    ROUND_BRACKET_O (285) 24 41 57 58 91 103 106 110 111 114
    ROUND_BRACKET_C (286) 24 41 57 58 91 103 106 110 111 114
    SQUARE_BRACKET_O (287) 56
    SQUARE_BRACKET_C (288) 56
    BRACE_BRACKET_O (289) 3 8 28
    BRACE_BRACKET_C (290) 3 8 28
    NEGATION_OP (291) 82
    NEGATIVE_OP (292)
    POSITIVE_OP (293)
    RETURN (294) 85 86
    DOT (295) 45 54
    ASSIGN_OP (296) 75 88 90
    SUM_ASSIGN_OP (297) 76
    SUB_ASSIGN_OP (298) 77
    MULT_ASSIGN_OP (299) 78
    DIV_ASSIGN_OP (300) 79
    MOD_ASSIGN_OP (301) 80
    POWER_ASSIGN_OP (302) 81
    LOGIC_EQUALS (303) 67
    LOGIC_NOT_EQUALS (304) 68
    LOGIC_LESS (305) 69
    LOGIC_GREATER (306) 70
    LOGIC_LESS_EQUALS (307) 71
    LOGIC_GREATER_EQUALS (308) 72
    LOGIC_OR (309) 73
    LOGIC_AND (310) 74
    SUM_OP (311) 61 83
    SUB_OP (312) 62 84
    MULT_OP (313) 63
    DIV_OP (314) 64
    MOD_OP (315) 65
    POWER_OP (316) 66
    CONST (317) 21 89 90
    PUBLIC (318) 10 18
    PRIVATE (319) 11 19
    STATIC (320) 12 20
    CLASS (321) 8


Nonterminals, with rules where they appear

    $accept (67)
        on left: 0
    NAMESPACE_LIST <expr> (68)
        on left: 1 2
        on right: 0 2
    NAMESPACE_DECL <expr> (69)
        on left: 3
        on right: 2
    NAMESPACE_MEMBER_LIST <expr> (70)
        on left: 4 5 6
        on right: 3 5 6
    USING_STATEMENT <expr> (71)
        on left: 7
        on right: 6
    CLASS_DECL <expr> (72)
        on left: 8
        on right: 5
    CLASS_MODIFIER_LIST <expr> (73)
        on left: 9 10 11 12
        on right: 8
    MEMBER_LIST <expr> (74)
        on left: 13 14 15
        on right: 8 14 15
    ATTRIBUTE_DECL <expr> (75)
        on left: 16
        on right: 15
    MEMBER_MODIFIER_LIST <expr> (76)
        on left: 17 18 19 20 21
        on right: 10 11 12 14 15 18 19 20 21
    METHOD_DECL <expr> (77)
        on left: 22 23
        on right: 14
    ARGUMENT_LIST_DECL <expr> (78)
        on left: 24
        on right: 22 23
    VARIABLE_NAME_LIST <expr> (79)
        on left: 25 26 27
        on right: 24 27
    EXPRESSION_BLOCK <expr> (80)
        on left: 28
        on right: 23 109 112 113 114
    EXPRESSION_LIST <expr> (81)
        on left: 29 30
        on right: 28 30
    EXPRESSION <expr> (82)
        on left: 31 32 33 34 35 36 37 38 39
        on right: 30 108
    STATEMENT <expr> (83)
        on left: 40 41 42 43
        on right: 39 41 56 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 86 88 90 94 96 98 103 106 110 111
    VALUE <expr> (84)
        on left: 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 40 45 54 56
    INDEX_CALL <expr> (85)
        on left: 56
        on right: 55
    METHOD_CALL <expr> (86)
        on left: 57 58
        on right: 44 45
    METHOD_ARGUMENT_LIST <expr> (87)
        on left: 59 60
        on right: 58 60
    BINARY_STATEMENT <expr> (88)
        on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 42
    UNARY_STATEMENT <expr> (89)
        on left: 82 83 84
        on right: 43
    RETURN_STATEMENT <expr> (90)
        on left: 85 86
        on right: 36
    VARIABLE_DECL <expr> (91)
        on left: 87 88
        on right: 37 93
    CONST_VARIABLE_DECL <expr> (92)
        on left: 89 90
        on right: 38
    FOR_STATEMENT <expr> (93)
        on left: 91
        on right: 32
    OPTIONAL_FOR_INIT <expr> (94)
        on left: 92 93 94
        on right: 91
    OPTIONAL_FOR_PRED <expr> (95)
        on left: 95 96
        on right: 91
    OPTIONAL_FOR_ITER <expr> (96)
        on left: 97 98
        on right: 91
    IF_STATEMENT <expr> (97)
        on left: 99 100 101 102
        on right: 31
    IF_BLOCK <expr> (98)
        on left: 103
        on right: 99 100 101 102
    ELIF_LIST <expr> (99)
        on left: 104 105
        on right: 100 101 105
    ELIF_BLOCK <expr> (100)
        on left: 106
        on right: 104 105
    ELSE_BLOCK <expr> (101)
        on left: 107
        on right: 101 102
    INNER_EXPRESSION_BLOCK <expr> (102)
        on left: 108 109
        on right: 91 103 106 107 110 111
    WHILE_STATEMENT <expr> (103)
        on left: 110
        on right: 33
    FOREACH_STATEMENT <expr> (104)
        on left: 111
        on right: 34
    TRY_STATEMENT <expr> (105)
        on left: 112 113 114
        on right: 35


State 0

    0 $accept: . NAMESPACE_LIST $end

    $default  reduce using rule 1 (NAMESPACE_LIST)

    NAMESPACE_LIST  go to state 1


State 1

    0 $accept: NAMESPACE_LIST . $end
    2 NAMESPACE_LIST: NAMESPACE_LIST . NAMESPACE_DECL

    $end       shift, and go to state 2
    NAMESPACE  shift, and go to state 3

    NAMESPACE_DECL  go to state 4


State 2

    0 $accept: NAMESPACE_LIST $end .

    $default  accept


State 3

    3 NAMESPACE_DECL: NAMESPACE . OBJECT BRACE_BRACKET_O NAMESPACE_MEMBER_LIST BRACE_BRACKET_C

    OBJECT  shift, and go to state 5


State 4

    2 NAMESPACE_LIST: NAMESPACE_LIST NAMESPACE_DECL .

    $default  reduce using rule 2 (NAMESPACE_LIST)


State 5

    3 NAMESPACE_DECL: NAMESPACE OBJECT . BRACE_BRACKET_O NAMESPACE_MEMBER_LIST BRACE_BRACKET_C

    BRACE_BRACKET_O  shift, and go to state 6


State 6

    3 NAMESPACE_DECL: NAMESPACE OBJECT BRACE_BRACKET_O . NAMESPACE_MEMBER_LIST BRACE_BRACKET_C

    $default  reduce using rule 4 (NAMESPACE_MEMBER_LIST)

    NAMESPACE_MEMBER_LIST  go to state 7


State 7

    3 NAMESPACE_DECL: NAMESPACE OBJECT BRACE_BRACKET_O NAMESPACE_MEMBER_LIST . BRACE_BRACKET_C
    5 NAMESPACE_MEMBER_LIST: NAMESPACE_MEMBER_LIST . CLASS_DECL
    6                      | NAMESPACE_MEMBER_LIST . USING_STATEMENT

    USING            shift, and go to state 8
    BRACE_BRACKET_C  shift, and go to state 9

    CLASS     reduce using rule 9 (CLASS_MODIFIER_LIST)
    $default  reduce using rule 17 (MEMBER_MODIFIER_LIST)

    USING_STATEMENT       go to state 10
    CLASS_DECL            go to state 11
    CLASS_MODIFIER_LIST   go to state 12
    MEMBER_MODIFIER_LIST  go to state 13


State 8

    7 USING_STATEMENT: USING . NAMESPACE OBJECT SEMICOLON

    NAMESPACE  shift, and go to state 14


State 9

    3 NAMESPACE_DECL: NAMESPACE OBJECT BRACE_BRACKET_O NAMESPACE_MEMBER_LIST BRACE_BRACKET_C .

    $default  reduce using rule 3 (NAMESPACE_DECL)


State 10

    6 NAMESPACE_MEMBER_LIST: NAMESPACE_MEMBER_LIST USING_STATEMENT .

    $default  reduce using rule 6 (NAMESPACE_MEMBER_LIST)


State 11

    5 NAMESPACE_MEMBER_LIST: NAMESPACE_MEMBER_LIST CLASS_DECL .

    $default  reduce using rule 5 (NAMESPACE_MEMBER_LIST)


State 12

    8 CLASS_DECL: CLASS_MODIFIER_LIST . CLASS OBJECT BRACE_BRACKET_O MEMBER_LIST BRACE_BRACKET_C

    CLASS  shift, and go to state 15


State 13

   10 CLASS_MODIFIER_LIST: MEMBER_MODIFIER_LIST . PUBLIC
   11                    | MEMBER_MODIFIER_LIST . PRIVATE
   12                    | MEMBER_MODIFIER_LIST . STATIC
   18 MEMBER_MODIFIER_LIST: MEMBER_MODIFIER_LIST . PUBLIC
   19                     | MEMBER_MODIFIER_LIST . PRIVATE
   20                     | MEMBER_MODIFIER_LIST . STATIC
   21                     | MEMBER_MODIFIER_LIST . CONST

    CONST    shift, and go to state 16
    PUBLIC   shift, and go to state 17
    PRIVATE  shift, and go to state 18
    STATIC   shift, and go to state 19


State 14

    7 USING_STATEMENT: USING NAMESPACE . OBJECT SEMICOLON

    OBJECT  shift, and go to state 20


State 15

    8 CLASS_DECL: CLASS_MODIFIER_LIST CLASS . OBJECT BRACE_BRACKET_O MEMBER_LIST BRACE_BRACKET_C

    OBJECT  shift, and go to state 21


State 16

   21 MEMBER_MODIFIER_LIST: MEMBER_MODIFIER_LIST CONST .

    $default  reduce using rule 21 (MEMBER_MODIFIER_LIST)


State 17

   10 CLASS_MODIFIER_LIST: MEMBER_MODIFIER_LIST PUBLIC .
   18 MEMBER_MODIFIER_LIST: MEMBER_MODIFIER_LIST PUBLIC .

    CLASS     reduce using rule 10 (CLASS_MODIFIER_LIST)
    $default  reduce using rule 18 (MEMBER_MODIFIER_LIST)


State 18

   11 CLASS_MODIFIER_LIST: MEMBER_MODIFIER_LIST PRIVATE .
   19 MEMBER_MODIFIER_LIST: MEMBER_MODIFIER_LIST PRIVATE .

    CLASS     reduce using rule 11 (CLASS_MODIFIER_LIST)
    $default  reduce using rule 19 (MEMBER_MODIFIER_LIST)


State 19

   12 CLASS_MODIFIER_LIST: MEMBER_MODIFIER_LIST STATIC .
   20 MEMBER_MODIFIER_LIST: MEMBER_MODIFIER_LIST STATIC .

    CLASS     reduce using rule 12 (CLASS_MODIFIER_LIST)
    $default  reduce using rule 20 (MEMBER_MODIFIER_LIST)


State 20

    7 USING_STATEMENT: USING NAMESPACE OBJECT . SEMICOLON

    SEMICOLON  shift, and go to state 22


State 21

    8 CLASS_DECL: CLASS_MODIFIER_LIST CLASS OBJECT . BRACE_BRACKET_O MEMBER_LIST BRACE_BRACKET_C

    BRACE_BRACKET_O  shift, and go to state 23


State 22

    7 USING_STATEMENT: USING NAMESPACE OBJECT SEMICOLON .

    $default  reduce using rule 7 (USING_STATEMENT)


State 23

    8 CLASS_DECL: CLASS_MODIFIER_LIST CLASS OBJECT BRACE_BRACKET_O . MEMBER_LIST BRACE_BRACKET_C

    $default  reduce using rule 13 (MEMBER_LIST)

    MEMBER_LIST  go to state 24


State 24

    8 CLASS_DECL: CLASS_MODIFIER_LIST CLASS OBJECT BRACE_BRACKET_O MEMBER_LIST . BRACE_BRACKET_C
   14 MEMBER_LIST: MEMBER_LIST . MEMBER_MODIFIER_LIST METHOD_DECL
   15            | MEMBER_LIST . MEMBER_MODIFIER_LIST ATTRIBUTE_DECL

    BRACE_BRACKET_C  shift, and go to state 25

    $default  reduce using rule 17 (MEMBER_MODIFIER_LIST)

    MEMBER_MODIFIER_LIST  go to state 26


State 25

    8 CLASS_DECL: CLASS_MODIFIER_LIST CLASS OBJECT BRACE_BRACKET_O MEMBER_LIST BRACE_BRACKET_C .

    $default  reduce using rule 8 (CLASS_DECL)


State 26

   14 MEMBER_LIST: MEMBER_LIST MEMBER_MODIFIER_LIST . METHOD_DECL
   15            | MEMBER_LIST MEMBER_MODIFIER_LIST . ATTRIBUTE_DECL
   18 MEMBER_MODIFIER_LIST: MEMBER_MODIFIER_LIST . PUBLIC
   19                     | MEMBER_MODIFIER_LIST . PRIVATE
   20                     | MEMBER_MODIFIER_LIST . STATIC
   21                     | MEMBER_MODIFIER_LIST . CONST

    VARIABLE  shift, and go to state 27
    FUNCTION  shift, and go to state 28
    CONST     shift, and go to state 16
    PUBLIC    shift, and go to state 29
    PRIVATE   shift, and go to state 30
    STATIC    shift, and go to state 31

    ATTRIBUTE_DECL  go to state 32
    METHOD_DECL     go to state 33


State 27

   16 ATTRIBUTE_DECL: VARIABLE . OBJECT SEMICOLON

    OBJECT  shift, and go to state 34


State 28

   22 METHOD_DECL: FUNCTION . OBJECT ARGUMENT_LIST_DECL SEMICOLON
   23            | FUNCTION . OBJECT ARGUMENT_LIST_DECL EXPRESSION_BLOCK

    OBJECT  shift, and go to state 35


State 29

   18 MEMBER_MODIFIER_LIST: MEMBER_MODIFIER_LIST PUBLIC .

    $default  reduce using rule 18 (MEMBER_MODIFIER_LIST)


State 30

   19 MEMBER_MODIFIER_LIST: MEMBER_MODIFIER_LIST PRIVATE .

    $default  reduce using rule 19 (MEMBER_MODIFIER_LIST)


State 31

   20 MEMBER_MODIFIER_LIST: MEMBER_MODIFIER_LIST STATIC .

    $default  reduce using rule 20 (MEMBER_MODIFIER_LIST)


State 32

   15 MEMBER_LIST: MEMBER_LIST MEMBER_MODIFIER_LIST ATTRIBUTE_DECL .

    $default  reduce using rule 15 (MEMBER_LIST)


State 33

   14 MEMBER_LIST: MEMBER_LIST MEMBER_MODIFIER_LIST METHOD_DECL .

    $default  reduce using rule 14 (MEMBER_LIST)


State 34

   16 ATTRIBUTE_DECL: VARIABLE OBJECT . SEMICOLON

    SEMICOLON  shift, and go to state 36


State 35

   22 METHOD_DECL: FUNCTION OBJECT . ARGUMENT_LIST_DECL SEMICOLON
   23            | FUNCTION OBJECT . ARGUMENT_LIST_DECL EXPRESSION_BLOCK

    ROUND_BRACKET_O  shift, and go to state 37

    ARGUMENT_LIST_DECL  go to state 38


State 36

   16 ATTRIBUTE_DECL: VARIABLE OBJECT SEMICOLON .

    $default  reduce using rule 16 (ATTRIBUTE_DECL)


State 37

   24 ARGUMENT_LIST_DECL: ROUND_BRACKET_O . VARIABLE_NAME_LIST ROUND_BRACKET_C

    OBJECT  shift, and go to state 39

    $default  reduce using rule 25 (VARIABLE_NAME_LIST)

    VARIABLE_NAME_LIST  go to state 40


State 38

   22 METHOD_DECL: FUNCTION OBJECT ARGUMENT_LIST_DECL . SEMICOLON
   23            | FUNCTION OBJECT ARGUMENT_LIST_DECL . EXPRESSION_BLOCK

    SEMICOLON        shift, and go to state 41
    BRACE_BRACKET_O  shift, and go to state 42

    EXPRESSION_BLOCK  go to state 43


State 39

   26 VARIABLE_NAME_LIST: OBJECT .

    $default  reduce using rule 26 (VARIABLE_NAME_LIST)


State 40

   24 ARGUMENT_LIST_DECL: ROUND_BRACKET_O VARIABLE_NAME_LIST . ROUND_BRACKET_C
   27 VARIABLE_NAME_LIST: VARIABLE_NAME_LIST . COMMA OBJECT

    COMMA            shift, and go to state 44
    ROUND_BRACKET_C  shift, and go to state 45


State 41

   22 METHOD_DECL: FUNCTION OBJECT ARGUMENT_LIST_DECL SEMICOLON .

    $default  reduce using rule 22 (METHOD_DECL)


State 42

   28 EXPRESSION_BLOCK: BRACE_BRACKET_O . EXPRESSION_LIST BRACE_BRACKET_C

    $default  reduce using rule 29 (EXPRESSION_LIST)

    EXPRESSION_LIST  go to state 46


State 43

   23 METHOD_DECL: FUNCTION OBJECT ARGUMENT_LIST_DECL EXPRESSION_BLOCK .

    $default  reduce using rule 23 (METHOD_DECL)


State 44

   27 VARIABLE_NAME_LIST: VARIABLE_NAME_LIST COMMA . OBJECT

    OBJECT  shift, and go to state 47


State 45

   24 ARGUMENT_LIST_DECL: ROUND_BRACKET_O VARIABLE_NAME_LIST ROUND_BRACKET_C .

    $default  reduce using rule 24 (ARGUMENT_LIST_DECL)


State 46

   28 EXPRESSION_BLOCK: BRACE_BRACKET_O EXPRESSION_LIST . BRACE_BRACKET_C
   30 EXPRESSION_LIST: EXPRESSION_LIST . EXPRESSION

    FOR               shift, and go to state 48
    IF                shift, and go to state 49
    WHILE             shift, and go to state 50
    VARIABLE          shift, and go to state 51
    FOREACH           shift, and go to state 52
    TRY               shift, and go to state 53
    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    BRACE_BRACKET_C   shift, and go to state 63
    NEGATION_OP       shift, and go to state 64
    RETURN            shift, and go to state 65
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67
    CONST             shift, and go to state 68

    EXPRESSION           go to state 69
    STATEMENT            go to state 70
    VALUE                go to state 71
    INDEX_CALL           go to state 72
    METHOD_CALL          go to state 73
    BINARY_STATEMENT     go to state 74
    UNARY_STATEMENT      go to state 75
    RETURN_STATEMENT     go to state 76
    VARIABLE_DECL        go to state 77
    CONST_VARIABLE_DECL  go to state 78
    FOR_STATEMENT        go to state 79
    IF_STATEMENT         go to state 80
    IF_BLOCK             go to state 81
    WHILE_STATEMENT      go to state 82
    FOREACH_STATEMENT    go to state 83
    TRY_STATEMENT        go to state 84


State 47

   27 VARIABLE_NAME_LIST: VARIABLE_NAME_LIST COMMA OBJECT .

    $default  reduce using rule 27 (VARIABLE_NAME_LIST)


State 48

   91 FOR_STATEMENT: FOR . ROUND_BRACKET_O OPTIONAL_FOR_INIT SEMICOLON OPTIONAL_FOR_PRED SEMICOLON OPTIONAL_FOR_ITER ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    ROUND_BRACKET_O  shift, and go to state 85


State 49

  103 IF_BLOCK: IF . ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    ROUND_BRACKET_O  shift, and go to state 86


State 50

  110 WHILE_STATEMENT: WHILE . ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    ROUND_BRACKET_O  shift, and go to state 87


State 51

   87 VARIABLE_DECL: VARIABLE . OBJECT
   88              | VARIABLE . OBJECT ASSIGN_OP STATEMENT

    OBJECT  shift, and go to state 88


State 52

  111 FOREACH_STATEMENT: FOREACH . ROUND_BRACKET_O VARIABLE OBJECT IN STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    ROUND_BRACKET_O  shift, and go to state 89


State 53

  112 TRY_STATEMENT: TRY . EXPRESSION_BLOCK
  113              | TRY . EXPRESSION_BLOCK CATCH EXPRESSION_BLOCK
  114              | TRY . EXPRESSION_BLOCK CATCH ROUND_BRACKET_O OBJECT ROUND_BRACKET_C EXPRESSION_BLOCK

    BRACE_BRACKET_O  shift, and go to state 42

    EXPRESSION_BLOCK  go to state 90


State 54

   51 VALUE: OBJECT .
   57 METHOD_CALL: OBJECT . ROUND_BRACKET_O ROUND_BRACKET_C
   58            | OBJECT . ROUND_BRACKET_O METHOD_ARGUMENT_LIST ROUND_BRACKET_C

    ROUND_BRACKET_O  shift, and go to state 91

    $default  reduce using rule 51 (VALUE)


State 55

   50 VALUE: THIS .

    $default  reduce using rule 50 (VALUE)


State 56

   46 VALUE: INTEGER_CONSTANT .

    $default  reduce using rule 46 (VALUE)


State 57

   48 VALUE: FLOAT_CONSTANT .

    $default  reduce using rule 48 (VALUE)


State 58

   47 VALUE: STRING_CONSTANT .

    $default  reduce using rule 47 (VALUE)


State 59

   52 VALUE: TRUE_CONSTANT .

    $default  reduce using rule 52 (VALUE)


State 60

   53 VALUE: FALSE_CONSTANT .

    $default  reduce using rule 53 (VALUE)


State 61

   49 VALUE: NULLPTR .

    $default  reduce using rule 49 (VALUE)


State 62

   41 STATEMENT: ROUND_BRACKET_O . STATEMENT ROUND_BRACKET_C

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 92
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 63

   28 EXPRESSION_BLOCK: BRACE_BRACKET_O EXPRESSION_LIST BRACE_BRACKET_C .

    $default  reduce using rule 28 (EXPRESSION_BLOCK)


State 64

   82 UNARY_STATEMENT: NEGATION_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 93
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 65

   85 RETURN_STATEMENT: RETURN .
   86                 | RETURN . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    $default  reduce using rule 85 (RETURN_STATEMENT)

    STATEMENT         go to state 94
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 66

   83 UNARY_STATEMENT: SUM_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 95
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 67

   84 UNARY_STATEMENT: SUB_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 96
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 68

   89 CONST_VARIABLE_DECL: CONST . VARIABLE OBJECT
   90                    | CONST . VARIABLE OBJECT ASSIGN_OP STATEMENT

    VARIABLE  shift, and go to state 97


State 69

   30 EXPRESSION_LIST: EXPRESSION_LIST EXPRESSION .

    $default  reduce using rule 30 (EXPRESSION_LIST)


State 70

   39 EXPRESSION: STATEMENT . SEMICOLON
   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    SEMICOLON             shift, and go to state 98
    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119


State 71

   40 STATEMENT: VALUE .
   45 VALUE: VALUE . DOT METHOD_CALL
   54      | VALUE . DOT OBJECT
   56 INDEX_CALL: VALUE . SQUARE_BRACKET_O STATEMENT SQUARE_BRACKET_C

    SQUARE_BRACKET_O  shift, and go to state 120
    DOT               shift, and go to state 121

    $default  reduce using rule 40 (STATEMENT)


State 72

   55 VALUE: INDEX_CALL .

    $default  reduce using rule 55 (VALUE)


State 73

   44 VALUE: METHOD_CALL .

    $default  reduce using rule 44 (VALUE)


State 74

   42 STATEMENT: BINARY_STATEMENT .

    $default  reduce using rule 42 (STATEMENT)


State 75

   43 STATEMENT: UNARY_STATEMENT .

    $default  reduce using rule 43 (STATEMENT)


State 76

   36 EXPRESSION: RETURN_STATEMENT . SEMICOLON

    SEMICOLON  shift, and go to state 122


State 77

   37 EXPRESSION: VARIABLE_DECL . SEMICOLON

    SEMICOLON  shift, and go to state 123


State 78

   38 EXPRESSION: CONST_VARIABLE_DECL . SEMICOLON

    SEMICOLON  shift, and go to state 124


State 79

   32 EXPRESSION: FOR_STATEMENT .

    $default  reduce using rule 32 (EXPRESSION)


State 80

   31 EXPRESSION: IF_STATEMENT .

    $default  reduce using rule 31 (EXPRESSION)


State 81

   99 IF_STATEMENT: IF_BLOCK .
  100             | IF_BLOCK . ELIF_LIST
  101             | IF_BLOCK . ELIF_LIST ELSE_BLOCK
  102             | IF_BLOCK . ELSE_BLOCK

    ELSE  shift, and go to state 125
    ELIF  shift, and go to state 126

    $default  reduce using rule 99 (IF_STATEMENT)

    ELIF_LIST   go to state 127
    ELIF_BLOCK  go to state 128
    ELSE_BLOCK  go to state 129


State 82

   33 EXPRESSION: WHILE_STATEMENT .

    $default  reduce using rule 33 (EXPRESSION)


State 83

   34 EXPRESSION: FOREACH_STATEMENT .

    $default  reduce using rule 34 (EXPRESSION)


State 84

   35 EXPRESSION: TRY_STATEMENT .

    $default  reduce using rule 35 (EXPRESSION)


State 85

   91 FOR_STATEMENT: FOR ROUND_BRACKET_O . OPTIONAL_FOR_INIT SEMICOLON OPTIONAL_FOR_PRED SEMICOLON OPTIONAL_FOR_ITER ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    VARIABLE          shift, and go to state 51
    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    $default  reduce using rule 92 (OPTIONAL_FOR_INIT)

    STATEMENT          go to state 130
    VALUE              go to state 71
    INDEX_CALL         go to state 72
    METHOD_CALL        go to state 73
    BINARY_STATEMENT   go to state 74
    UNARY_STATEMENT    go to state 75
    VARIABLE_DECL      go to state 131
    OPTIONAL_FOR_INIT  go to state 132


State 86

  103 IF_BLOCK: IF ROUND_BRACKET_O . STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 133
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 87

  110 WHILE_STATEMENT: WHILE ROUND_BRACKET_O . STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 134
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 88

   87 VARIABLE_DECL: VARIABLE OBJECT .
   88              | VARIABLE OBJECT . ASSIGN_OP STATEMENT

    ASSIGN_OP  shift, and go to state 135

    $default  reduce using rule 87 (VARIABLE_DECL)


State 89

  111 FOREACH_STATEMENT: FOREACH ROUND_BRACKET_O . VARIABLE OBJECT IN STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    VARIABLE  shift, and go to state 136


State 90

  112 TRY_STATEMENT: TRY EXPRESSION_BLOCK .
  113              | TRY EXPRESSION_BLOCK . CATCH EXPRESSION_BLOCK
  114              | TRY EXPRESSION_BLOCK . CATCH ROUND_BRACKET_O OBJECT ROUND_BRACKET_C EXPRESSION_BLOCK

    CATCH  shift, and go to state 137

    $default  reduce using rule 112 (TRY_STATEMENT)


State 91

   57 METHOD_CALL: OBJECT ROUND_BRACKET_O . ROUND_BRACKET_C
   58            | OBJECT ROUND_BRACKET_O . METHOD_ARGUMENT_LIST ROUND_BRACKET_C

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    ROUND_BRACKET_C   shift, and go to state 138
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT             go to state 139
    VALUE                 go to state 71
    INDEX_CALL            go to state 72
    METHOD_CALL           go to state 73
    METHOD_ARGUMENT_LIST  go to state 140
    BINARY_STATEMENT      go to state 74
    UNARY_STATEMENT       go to state 75


State 92

   41 STATEMENT: ROUND_BRACKET_O STATEMENT . ROUND_BRACKET_C
   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    ROUND_BRACKET_C       shift, and go to state 141
    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119


State 93

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
   82 UNARY_STATEMENT: NEGATION_OP STATEMENT .

    $default  reduce using rule 82 (UNARY_STATEMENT)


State 94

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
   86 RETURN_STATEMENT: RETURN STATEMENT .

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 86 (RETURN_STATEMENT)


State 95

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
   83 UNARY_STATEMENT: SUM_OP STATEMENT .

    $default  reduce using rule 83 (UNARY_STATEMENT)


State 96

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
   84 UNARY_STATEMENT: SUB_OP STATEMENT .

    $default  reduce using rule 84 (UNARY_STATEMENT)


State 97

   89 CONST_VARIABLE_DECL: CONST VARIABLE . OBJECT
   90                    | CONST VARIABLE . OBJECT ASSIGN_OP STATEMENT

    OBJECT  shift, and go to state 142


State 98

   39 EXPRESSION: STATEMENT SEMICOLON .

    $default  reduce using rule 39 (EXPRESSION)


State 99

   75 BINARY_STATEMENT: STATEMENT ASSIGN_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 143
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 100

   76 BINARY_STATEMENT: STATEMENT SUM_ASSIGN_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 144
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 101

   77 BINARY_STATEMENT: STATEMENT SUB_ASSIGN_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 145
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 102

   78 BINARY_STATEMENT: STATEMENT MULT_ASSIGN_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 146
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 103

   79 BINARY_STATEMENT: STATEMENT DIV_ASSIGN_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 147
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 104

   80 BINARY_STATEMENT: STATEMENT MOD_ASSIGN_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 148
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 105

   81 BINARY_STATEMENT: STATEMENT POWER_ASSIGN_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 149
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 106

   67 BINARY_STATEMENT: STATEMENT LOGIC_EQUALS . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 150
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 107

   68 BINARY_STATEMENT: STATEMENT LOGIC_NOT_EQUALS . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 151
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 108

   69 BINARY_STATEMENT: STATEMENT LOGIC_LESS . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 152
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 109

   70 BINARY_STATEMENT: STATEMENT LOGIC_GREATER . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 153
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 110

   71 BINARY_STATEMENT: STATEMENT LOGIC_LESS_EQUALS . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 154
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 111

   72 BINARY_STATEMENT: STATEMENT LOGIC_GREATER_EQUALS . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 155
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 112

   73 BINARY_STATEMENT: STATEMENT LOGIC_OR . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 156
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 113

   74 BINARY_STATEMENT: STATEMENT LOGIC_AND . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 157
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 114

   61 BINARY_STATEMENT: STATEMENT SUM_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 158
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 115

   62 BINARY_STATEMENT: STATEMENT SUB_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 159
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 116

   63 BINARY_STATEMENT: STATEMENT MULT_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 160
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 117

   64 BINARY_STATEMENT: STATEMENT DIV_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 161
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 118

   65 BINARY_STATEMENT: STATEMENT MOD_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 162
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 119

   66 BINARY_STATEMENT: STATEMENT POWER_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 163
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 120

   56 INDEX_CALL: VALUE SQUARE_BRACKET_O . STATEMENT SQUARE_BRACKET_C

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 164
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 121

   45 VALUE: VALUE DOT . METHOD_CALL
   54      | VALUE DOT . OBJECT

    OBJECT  shift, and go to state 165

    METHOD_CALL  go to state 166


State 122

   36 EXPRESSION: RETURN_STATEMENT SEMICOLON .

    $default  reduce using rule 36 (EXPRESSION)


State 123

   37 EXPRESSION: VARIABLE_DECL SEMICOLON .

    $default  reduce using rule 37 (EXPRESSION)


State 124

   38 EXPRESSION: CONST_VARIABLE_DECL SEMICOLON .

    $default  reduce using rule 38 (EXPRESSION)


State 125

  107 ELSE_BLOCK: ELSE . INNER_EXPRESSION_BLOCK

    FOR               shift, and go to state 48
    IF                shift, and go to state 49
    WHILE             shift, and go to state 50
    VARIABLE          shift, and go to state 51
    FOREACH           shift, and go to state 52
    TRY               shift, and go to state 53
    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    BRACE_BRACKET_O   shift, and go to state 42
    NEGATION_OP       shift, and go to state 64
    RETURN            shift, and go to state 65
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67
    CONST             shift, and go to state 68

    EXPRESSION_BLOCK        go to state 167
    EXPRESSION              go to state 168
    STATEMENT               go to state 70
    VALUE                   go to state 71
    INDEX_CALL              go to state 72
    METHOD_CALL             go to state 73
    BINARY_STATEMENT        go to state 74
    UNARY_STATEMENT         go to state 75
    RETURN_STATEMENT        go to state 76
    VARIABLE_DECL           go to state 77
    CONST_VARIABLE_DECL     go to state 78
    FOR_STATEMENT           go to state 79
    IF_STATEMENT            go to state 80
    IF_BLOCK                go to state 81
    INNER_EXPRESSION_BLOCK  go to state 169
    WHILE_STATEMENT         go to state 82
    FOREACH_STATEMENT       go to state 83
    TRY_STATEMENT           go to state 84


State 126

  106 ELIF_BLOCK: ELIF . ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    ROUND_BRACKET_O  shift, and go to state 170


State 127

  100 IF_STATEMENT: IF_BLOCK ELIF_LIST .
  101             | IF_BLOCK ELIF_LIST . ELSE_BLOCK
  105 ELIF_LIST: ELIF_LIST . ELIF_BLOCK

    ELSE  shift, and go to state 125
    ELIF  shift, and go to state 126

    $default  reduce using rule 100 (IF_STATEMENT)

    ELIF_BLOCK  go to state 171
    ELSE_BLOCK  go to state 172


State 128

  104 ELIF_LIST: ELIF_BLOCK .

    $default  reduce using rule 104 (ELIF_LIST)


State 129

  102 IF_STATEMENT: IF_BLOCK ELSE_BLOCK .

    $default  reduce using rule 102 (IF_STATEMENT)


State 130

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
   94 OPTIONAL_FOR_INIT: STATEMENT .

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 94 (OPTIONAL_FOR_INIT)


State 131

   93 OPTIONAL_FOR_INIT: VARIABLE_DECL .

    $default  reduce using rule 93 (OPTIONAL_FOR_INIT)


State 132

   91 FOR_STATEMENT: FOR ROUND_BRACKET_O OPTIONAL_FOR_INIT . SEMICOLON OPTIONAL_FOR_PRED SEMICOLON OPTIONAL_FOR_ITER ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    SEMICOLON  shift, and go to state 173


State 133

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
  103 IF_BLOCK: IF ROUND_BRACKET_O STATEMENT . ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    ROUND_BRACKET_C       shift, and go to state 174
    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119


State 134

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
  110 WHILE_STATEMENT: WHILE ROUND_BRACKET_O STATEMENT . ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    ROUND_BRACKET_C       shift, and go to state 175
    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119


State 135

   88 VARIABLE_DECL: VARIABLE OBJECT ASSIGN_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 176
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 136

  111 FOREACH_STATEMENT: FOREACH ROUND_BRACKET_O VARIABLE . OBJECT IN STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    OBJECT  shift, and go to state 177


State 137

  113 TRY_STATEMENT: TRY EXPRESSION_BLOCK CATCH . EXPRESSION_BLOCK
  114              | TRY EXPRESSION_BLOCK CATCH . ROUND_BRACKET_O OBJECT ROUND_BRACKET_C EXPRESSION_BLOCK

    ROUND_BRACKET_O  shift, and go to state 178
    BRACE_BRACKET_O  shift, and go to state 42

    EXPRESSION_BLOCK  go to state 179


State 138

   57 METHOD_CALL: OBJECT ROUND_BRACKET_O ROUND_BRACKET_C .

    $default  reduce using rule 57 (METHOD_CALL)


State 139

   59 METHOD_ARGUMENT_LIST: STATEMENT .
   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 59 (METHOD_ARGUMENT_LIST)


State 140

   58 METHOD_CALL: OBJECT ROUND_BRACKET_O METHOD_ARGUMENT_LIST . ROUND_BRACKET_C
   60 METHOD_ARGUMENT_LIST: METHOD_ARGUMENT_LIST . COMMA STATEMENT

    COMMA            shift, and go to state 180
    ROUND_BRACKET_C  shift, and go to state 181


State 141

   41 STATEMENT: ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C .

    $default  reduce using rule 41 (STATEMENT)


State 142

   89 CONST_VARIABLE_DECL: CONST VARIABLE OBJECT .
   90                    | CONST VARIABLE OBJECT . ASSIGN_OP STATEMENT

    ASSIGN_OP  shift, and go to state 182

    $default  reduce using rule 89 (CONST_VARIABLE_DECL)


State 143

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   75                 | STATEMENT ASSIGN_OP STATEMENT .
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 75 (BINARY_STATEMENT)


State 144

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   76                 | STATEMENT SUM_ASSIGN_OP STATEMENT .
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 76 (BINARY_STATEMENT)


State 145

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   77                 | STATEMENT SUB_ASSIGN_OP STATEMENT .
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 77 (BINARY_STATEMENT)


State 146

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   78                 | STATEMENT MULT_ASSIGN_OP STATEMENT .
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 78 (BINARY_STATEMENT)


State 147

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   79                 | STATEMENT DIV_ASSIGN_OP STATEMENT .
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 79 (BINARY_STATEMENT)


State 148

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   80                 | STATEMENT MOD_ASSIGN_OP STATEMENT .
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 80 (BINARY_STATEMENT)


State 149

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
   81                 | STATEMENT POWER_ASSIGN_OP STATEMENT .

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 81 (BINARY_STATEMENT)


State 150

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   67                 | STATEMENT LOGIC_EQUALS STATEMENT .
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 67 (BINARY_STATEMENT)


State 151

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   68                 | STATEMENT LOGIC_NOT_EQUALS STATEMENT .
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 68 (BINARY_STATEMENT)


State 152

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   69                 | STATEMENT LOGIC_LESS STATEMENT .
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    SUM_OP    shift, and go to state 114
    SUB_OP    shift, and go to state 115
    MULT_OP   shift, and go to state 116
    DIV_OP    shift, and go to state 117
    MOD_OP    shift, and go to state 118
    POWER_OP  shift, and go to state 119

    $default  reduce using rule 69 (BINARY_STATEMENT)


State 153

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   70                 | STATEMENT LOGIC_GREATER STATEMENT .
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    SUM_OP    shift, and go to state 114
    SUB_OP    shift, and go to state 115
    MULT_OP   shift, and go to state 116
    DIV_OP    shift, and go to state 117
    MOD_OP    shift, and go to state 118
    POWER_OP  shift, and go to state 119

    $default  reduce using rule 70 (BINARY_STATEMENT)


State 154

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   71                 | STATEMENT LOGIC_LESS_EQUALS STATEMENT .
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    SUM_OP    shift, and go to state 114
    SUB_OP    shift, and go to state 115
    MULT_OP   shift, and go to state 116
    DIV_OP    shift, and go to state 117
    MOD_OP    shift, and go to state 118
    POWER_OP  shift, and go to state 119

    $default  reduce using rule 71 (BINARY_STATEMENT)


State 155

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   72                 | STATEMENT LOGIC_GREATER_EQUALS STATEMENT .
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    SUM_OP    shift, and go to state 114
    SUB_OP    shift, and go to state 115
    MULT_OP   shift, and go to state 116
    DIV_OP    shift, and go to state 117
    MOD_OP    shift, and go to state 118
    POWER_OP  shift, and go to state 119

    $default  reduce using rule 72 (BINARY_STATEMENT)


State 156

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   73                 | STATEMENT LOGIC_OR STATEMENT .
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 73 (BINARY_STATEMENT)


State 157

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   74                 | STATEMENT LOGIC_AND STATEMENT .
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 74 (BINARY_STATEMENT)


State 158

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   61                 | STATEMENT SUM_OP STATEMENT .
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    MULT_OP   shift, and go to state 116
    DIV_OP    shift, and go to state 117
    MOD_OP    shift, and go to state 118
    POWER_OP  shift, and go to state 119

    $default  reduce using rule 61 (BINARY_STATEMENT)


State 159

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   62                 | STATEMENT SUB_OP STATEMENT .
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    MULT_OP   shift, and go to state 116
    DIV_OP    shift, and go to state 117
    MOD_OP    shift, and go to state 118
    POWER_OP  shift, and go to state 119

    $default  reduce using rule 62 (BINARY_STATEMENT)


State 160

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   63                 | STATEMENT MULT_OP STATEMENT .
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    POWER_OP  shift, and go to state 119

    $default  reduce using rule 63 (BINARY_STATEMENT)


State 161

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   64                 | STATEMENT DIV_OP STATEMENT .
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    POWER_OP  shift, and go to state 119

    $default  reduce using rule 64 (BINARY_STATEMENT)


State 162

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   65                 | STATEMENT MOD_OP STATEMENT .
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    POWER_OP  shift, and go to state 119

    $default  reduce using rule 65 (BINARY_STATEMENT)


State 163

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   66                 | STATEMENT POWER_OP STATEMENT .
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    $default  reduce using rule 66 (BINARY_STATEMENT)


State 164

   56 INDEX_CALL: VALUE SQUARE_BRACKET_O STATEMENT . SQUARE_BRACKET_C
   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    SQUARE_BRACKET_C      shift, and go to state 183
    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119


State 165

   54 VALUE: VALUE DOT OBJECT .
   57 METHOD_CALL: OBJECT . ROUND_BRACKET_O ROUND_BRACKET_C
   58            | OBJECT . ROUND_BRACKET_O METHOD_ARGUMENT_LIST ROUND_BRACKET_C

    ROUND_BRACKET_O  shift, and go to state 91

    $default  reduce using rule 54 (VALUE)


State 166

   45 VALUE: VALUE DOT METHOD_CALL .

    $default  reduce using rule 45 (VALUE)


State 167

  109 INNER_EXPRESSION_BLOCK: EXPRESSION_BLOCK .

    $default  reduce using rule 109 (INNER_EXPRESSION_BLOCK)


State 168

  108 INNER_EXPRESSION_BLOCK: EXPRESSION .

    $default  reduce using rule 108 (INNER_EXPRESSION_BLOCK)


State 169

  107 ELSE_BLOCK: ELSE INNER_EXPRESSION_BLOCK .

    $default  reduce using rule 107 (ELSE_BLOCK)


State 170

  106 ELIF_BLOCK: ELIF ROUND_BRACKET_O . STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 184
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 171

  105 ELIF_LIST: ELIF_LIST ELIF_BLOCK .

    $default  reduce using rule 105 (ELIF_LIST)


State 172

  101 IF_STATEMENT: IF_BLOCK ELIF_LIST ELSE_BLOCK .

    $default  reduce using rule 101 (IF_STATEMENT)


State 173

   91 FOR_STATEMENT: FOR ROUND_BRACKET_O OPTIONAL_FOR_INIT SEMICOLON . OPTIONAL_FOR_PRED SEMICOLON OPTIONAL_FOR_ITER ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    $default  reduce using rule 95 (OPTIONAL_FOR_PRED)

    STATEMENT          go to state 185
    VALUE              go to state 71
    INDEX_CALL         go to state 72
    METHOD_CALL        go to state 73
    BINARY_STATEMENT   go to state 74
    UNARY_STATEMENT    go to state 75
    OPTIONAL_FOR_PRED  go to state 186


State 174

  103 IF_BLOCK: IF ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C . INNER_EXPRESSION_BLOCK

    FOR               shift, and go to state 48
    IF                shift, and go to state 49
    WHILE             shift, and go to state 50
    VARIABLE          shift, and go to state 51
    FOREACH           shift, and go to state 52
    TRY               shift, and go to state 53
    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    BRACE_BRACKET_O   shift, and go to state 42
    NEGATION_OP       shift, and go to state 64
    RETURN            shift, and go to state 65
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67
    CONST             shift, and go to state 68

    EXPRESSION_BLOCK        go to state 167
    EXPRESSION              go to state 168
    STATEMENT               go to state 70
    VALUE                   go to state 71
    INDEX_CALL              go to state 72
    METHOD_CALL             go to state 73
    BINARY_STATEMENT        go to state 74
    UNARY_STATEMENT         go to state 75
    RETURN_STATEMENT        go to state 76
    VARIABLE_DECL           go to state 77
    CONST_VARIABLE_DECL     go to state 78
    FOR_STATEMENT           go to state 79
    IF_STATEMENT            go to state 80
    IF_BLOCK                go to state 81
    INNER_EXPRESSION_BLOCK  go to state 187
    WHILE_STATEMENT         go to state 82
    FOREACH_STATEMENT       go to state 83
    TRY_STATEMENT           go to state 84


State 175

  110 WHILE_STATEMENT: WHILE ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C . INNER_EXPRESSION_BLOCK

    FOR               shift, and go to state 48
    IF                shift, and go to state 49
    WHILE             shift, and go to state 50
    VARIABLE          shift, and go to state 51
    FOREACH           shift, and go to state 52
    TRY               shift, and go to state 53
    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    BRACE_BRACKET_O   shift, and go to state 42
    NEGATION_OP       shift, and go to state 64
    RETURN            shift, and go to state 65
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67
    CONST             shift, and go to state 68

    EXPRESSION_BLOCK        go to state 167
    EXPRESSION              go to state 168
    STATEMENT               go to state 70
    VALUE                   go to state 71
    INDEX_CALL              go to state 72
    METHOD_CALL             go to state 73
    BINARY_STATEMENT        go to state 74
    UNARY_STATEMENT         go to state 75
    RETURN_STATEMENT        go to state 76
    VARIABLE_DECL           go to state 77
    CONST_VARIABLE_DECL     go to state 78
    FOR_STATEMENT           go to state 79
    IF_STATEMENT            go to state 80
    IF_BLOCK                go to state 81
    INNER_EXPRESSION_BLOCK  go to state 188
    WHILE_STATEMENT         go to state 82
    FOREACH_STATEMENT       go to state 83
    TRY_STATEMENT           go to state 84


State 176

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
   88 VARIABLE_DECL: VARIABLE OBJECT ASSIGN_OP STATEMENT .

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 88 (VARIABLE_DECL)


State 177

  111 FOREACH_STATEMENT: FOREACH ROUND_BRACKET_O VARIABLE OBJECT . IN STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    IN  shift, and go to state 189


State 178

  114 TRY_STATEMENT: TRY EXPRESSION_BLOCK CATCH ROUND_BRACKET_O . OBJECT ROUND_BRACKET_C EXPRESSION_BLOCK

    OBJECT  shift, and go to state 190


State 179

  113 TRY_STATEMENT: TRY EXPRESSION_BLOCK CATCH EXPRESSION_BLOCK .

    $default  reduce using rule 113 (TRY_STATEMENT)


State 180

   60 METHOD_ARGUMENT_LIST: METHOD_ARGUMENT_LIST COMMA . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 191
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 181

   58 METHOD_CALL: OBJECT ROUND_BRACKET_O METHOD_ARGUMENT_LIST ROUND_BRACKET_C .

    $default  reduce using rule 58 (METHOD_CALL)


State 182

   90 CONST_VARIABLE_DECL: CONST VARIABLE OBJECT ASSIGN_OP . STATEMENT

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 192
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 183

   56 INDEX_CALL: VALUE SQUARE_BRACKET_O STATEMENT SQUARE_BRACKET_C .

    $default  reduce using rule 56 (INDEX_CALL)


State 184

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
  106 ELIF_BLOCK: ELIF ROUND_BRACKET_O STATEMENT . ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    ROUND_BRACKET_C       shift, and go to state 193
    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119


State 185

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
   96 OPTIONAL_FOR_PRED: STATEMENT .

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 96 (OPTIONAL_FOR_PRED)


State 186

   91 FOR_STATEMENT: FOR ROUND_BRACKET_O OPTIONAL_FOR_INIT SEMICOLON OPTIONAL_FOR_PRED . SEMICOLON OPTIONAL_FOR_ITER ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    SEMICOLON  shift, and go to state 194


State 187

  103 IF_BLOCK: IF ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK .

    $default  reduce using rule 103 (IF_BLOCK)


State 188

  110 WHILE_STATEMENT: WHILE ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK .

    $default  reduce using rule 110 (WHILE_STATEMENT)


State 189

  111 FOREACH_STATEMENT: FOREACH ROUND_BRACKET_O VARIABLE OBJECT IN . STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    STATEMENT         go to state 195
    VALUE             go to state 71
    INDEX_CALL        go to state 72
    METHOD_CALL       go to state 73
    BINARY_STATEMENT  go to state 74
    UNARY_STATEMENT   go to state 75


State 190

  114 TRY_STATEMENT: TRY EXPRESSION_BLOCK CATCH ROUND_BRACKET_O OBJECT . ROUND_BRACKET_C EXPRESSION_BLOCK

    ROUND_BRACKET_C  shift, and go to state 196


State 191

   60 METHOD_ARGUMENT_LIST: METHOD_ARGUMENT_LIST COMMA STATEMENT .
   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 60 (METHOD_ARGUMENT_LIST)


State 192

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
   90 CONST_VARIABLE_DECL: CONST VARIABLE OBJECT ASSIGN_OP STATEMENT .

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 90 (CONST_VARIABLE_DECL)


State 193

  106 ELIF_BLOCK: ELIF ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C . INNER_EXPRESSION_BLOCK

    FOR               shift, and go to state 48
    IF                shift, and go to state 49
    WHILE             shift, and go to state 50
    VARIABLE          shift, and go to state 51
    FOREACH           shift, and go to state 52
    TRY               shift, and go to state 53
    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    BRACE_BRACKET_O   shift, and go to state 42
    NEGATION_OP       shift, and go to state 64
    RETURN            shift, and go to state 65
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67
    CONST             shift, and go to state 68

    EXPRESSION_BLOCK        go to state 167
    EXPRESSION              go to state 168
    STATEMENT               go to state 70
    VALUE                   go to state 71
    INDEX_CALL              go to state 72
    METHOD_CALL             go to state 73
    BINARY_STATEMENT        go to state 74
    UNARY_STATEMENT         go to state 75
    RETURN_STATEMENT        go to state 76
    VARIABLE_DECL           go to state 77
    CONST_VARIABLE_DECL     go to state 78
    FOR_STATEMENT           go to state 79
    IF_STATEMENT            go to state 80
    IF_BLOCK                go to state 81
    INNER_EXPRESSION_BLOCK  go to state 197
    WHILE_STATEMENT         go to state 82
    FOREACH_STATEMENT       go to state 83
    TRY_STATEMENT           go to state 84


State 194

   91 FOR_STATEMENT: FOR ROUND_BRACKET_O OPTIONAL_FOR_INIT SEMICOLON OPTIONAL_FOR_PRED SEMICOLON . OPTIONAL_FOR_ITER ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    NEGATION_OP       shift, and go to state 64
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67

    $default  reduce using rule 97 (OPTIONAL_FOR_ITER)

    STATEMENT          go to state 198
    VALUE              go to state 71
    INDEX_CALL         go to state 72
    METHOD_CALL        go to state 73
    BINARY_STATEMENT   go to state 74
    UNARY_STATEMENT    go to state 75
    OPTIONAL_FOR_ITER  go to state 199


State 195

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
  111 FOREACH_STATEMENT: FOREACH ROUND_BRACKET_O VARIABLE OBJECT IN STATEMENT . ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    ROUND_BRACKET_C       shift, and go to state 200
    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119


State 196

  114 TRY_STATEMENT: TRY EXPRESSION_BLOCK CATCH ROUND_BRACKET_O OBJECT ROUND_BRACKET_C . EXPRESSION_BLOCK

    BRACE_BRACKET_O  shift, and go to state 42

    EXPRESSION_BLOCK  go to state 201


State 197

  106 ELIF_BLOCK: ELIF ROUND_BRACKET_O STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK .

    $default  reduce using rule 106 (ELIF_BLOCK)


State 198

   61 BINARY_STATEMENT: STATEMENT . SUM_OP STATEMENT
   62                 | STATEMENT . SUB_OP STATEMENT
   63                 | STATEMENT . MULT_OP STATEMENT
   64                 | STATEMENT . DIV_OP STATEMENT
   65                 | STATEMENT . MOD_OP STATEMENT
   66                 | STATEMENT . POWER_OP STATEMENT
   67                 | STATEMENT . LOGIC_EQUALS STATEMENT
   68                 | STATEMENT . LOGIC_NOT_EQUALS STATEMENT
   69                 | STATEMENT . LOGIC_LESS STATEMENT
   70                 | STATEMENT . LOGIC_GREATER STATEMENT
   71                 | STATEMENT . LOGIC_LESS_EQUALS STATEMENT
   72                 | STATEMENT . LOGIC_GREATER_EQUALS STATEMENT
   73                 | STATEMENT . LOGIC_OR STATEMENT
   74                 | STATEMENT . LOGIC_AND STATEMENT
   75                 | STATEMENT . ASSIGN_OP STATEMENT
   76                 | STATEMENT . SUM_ASSIGN_OP STATEMENT
   77                 | STATEMENT . SUB_ASSIGN_OP STATEMENT
   78                 | STATEMENT . MULT_ASSIGN_OP STATEMENT
   79                 | STATEMENT . DIV_ASSIGN_OP STATEMENT
   80                 | STATEMENT . MOD_ASSIGN_OP STATEMENT
   81                 | STATEMENT . POWER_ASSIGN_OP STATEMENT
   98 OPTIONAL_FOR_ITER: STATEMENT .

    ASSIGN_OP             shift, and go to state 99
    SUM_ASSIGN_OP         shift, and go to state 100
    SUB_ASSIGN_OP         shift, and go to state 101
    MULT_ASSIGN_OP        shift, and go to state 102
    DIV_ASSIGN_OP         shift, and go to state 103
    MOD_ASSIGN_OP         shift, and go to state 104
    POWER_ASSIGN_OP       shift, and go to state 105
    LOGIC_EQUALS          shift, and go to state 106
    LOGIC_NOT_EQUALS      shift, and go to state 107
    LOGIC_LESS            shift, and go to state 108
    LOGIC_GREATER         shift, and go to state 109
    LOGIC_LESS_EQUALS     shift, and go to state 110
    LOGIC_GREATER_EQUALS  shift, and go to state 111
    LOGIC_OR              shift, and go to state 112
    LOGIC_AND             shift, and go to state 113
    SUM_OP                shift, and go to state 114
    SUB_OP                shift, and go to state 115
    MULT_OP               shift, and go to state 116
    DIV_OP                shift, and go to state 117
    MOD_OP                shift, and go to state 118
    POWER_OP              shift, and go to state 119

    $default  reduce using rule 98 (OPTIONAL_FOR_ITER)


State 199

   91 FOR_STATEMENT: FOR ROUND_BRACKET_O OPTIONAL_FOR_INIT SEMICOLON OPTIONAL_FOR_PRED SEMICOLON OPTIONAL_FOR_ITER . ROUND_BRACKET_C INNER_EXPRESSION_BLOCK

    ROUND_BRACKET_C  shift, and go to state 202


State 200

  111 FOREACH_STATEMENT: FOREACH ROUND_BRACKET_O VARIABLE OBJECT IN STATEMENT ROUND_BRACKET_C . INNER_EXPRESSION_BLOCK

    FOR               shift, and go to state 48
    IF                shift, and go to state 49
    WHILE             shift, and go to state 50
    VARIABLE          shift, and go to state 51
    FOREACH           shift, and go to state 52
    TRY               shift, and go to state 53
    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    BRACE_BRACKET_O   shift, and go to state 42
    NEGATION_OP       shift, and go to state 64
    RETURN            shift, and go to state 65
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67
    CONST             shift, and go to state 68

    EXPRESSION_BLOCK        go to state 167
    EXPRESSION              go to state 168
    STATEMENT               go to state 70
    VALUE                   go to state 71
    INDEX_CALL              go to state 72
    METHOD_CALL             go to state 73
    BINARY_STATEMENT        go to state 74
    UNARY_STATEMENT         go to state 75
    RETURN_STATEMENT        go to state 76
    VARIABLE_DECL           go to state 77
    CONST_VARIABLE_DECL     go to state 78
    FOR_STATEMENT           go to state 79
    IF_STATEMENT            go to state 80
    IF_BLOCK                go to state 81
    INNER_EXPRESSION_BLOCK  go to state 203
    WHILE_STATEMENT         go to state 82
    FOREACH_STATEMENT       go to state 83
    TRY_STATEMENT           go to state 84


State 201

  114 TRY_STATEMENT: TRY EXPRESSION_BLOCK CATCH ROUND_BRACKET_O OBJECT ROUND_BRACKET_C EXPRESSION_BLOCK .

    $default  reduce using rule 114 (TRY_STATEMENT)


State 202

   91 FOR_STATEMENT: FOR ROUND_BRACKET_O OPTIONAL_FOR_INIT SEMICOLON OPTIONAL_FOR_PRED SEMICOLON OPTIONAL_FOR_ITER ROUND_BRACKET_C . INNER_EXPRESSION_BLOCK

    FOR               shift, and go to state 48
    IF                shift, and go to state 49
    WHILE             shift, and go to state 50
    VARIABLE          shift, and go to state 51
    FOREACH           shift, and go to state 52
    TRY               shift, and go to state 53
    OBJECT            shift, and go to state 54
    THIS              shift, and go to state 55
    INTEGER_CONSTANT  shift, and go to state 56
    FLOAT_CONSTANT    shift, and go to state 57
    STRING_CONSTANT   shift, and go to state 58
    TRUE_CONSTANT     shift, and go to state 59
    FALSE_CONSTANT    shift, and go to state 60
    NULLPTR           shift, and go to state 61
    ROUND_BRACKET_O   shift, and go to state 62
    BRACE_BRACKET_O   shift, and go to state 42
    NEGATION_OP       shift, and go to state 64
    RETURN            shift, and go to state 65
    SUM_OP            shift, and go to state 66
    SUB_OP            shift, and go to state 67
    CONST             shift, and go to state 68

    EXPRESSION_BLOCK        go to state 167
    EXPRESSION              go to state 168
    STATEMENT               go to state 70
    VALUE                   go to state 71
    INDEX_CALL              go to state 72
    METHOD_CALL             go to state 73
    BINARY_STATEMENT        go to state 74
    UNARY_STATEMENT         go to state 75
    RETURN_STATEMENT        go to state 76
    VARIABLE_DECL           go to state 77
    CONST_VARIABLE_DECL     go to state 78
    FOR_STATEMENT           go to state 79
    IF_STATEMENT            go to state 80
    IF_BLOCK                go to state 81
    INNER_EXPRESSION_BLOCK  go to state 204
    WHILE_STATEMENT         go to state 82
    FOREACH_STATEMENT       go to state 83
    TRY_STATEMENT           go to state 84


State 203

  111 FOREACH_STATEMENT: FOREACH ROUND_BRACKET_O VARIABLE OBJECT IN STATEMENT ROUND_BRACKET_C INNER_EXPRESSION_BLOCK .

    $default  reduce using rule 111 (FOREACH_STATEMENT)


State 204

   91 FOR_STATEMENT: FOR ROUND_BRACKET_O OPTIONAL_FOR_INIT SEMICOLON OPTIONAL_FOR_PRED SEMICOLON OPTIONAL_FOR_ITER ROUND_BRACKET_C INNER_EXPRESSION_BLOCK .

    $default  reduce using rule 91 (FOR_STATEMENT)
